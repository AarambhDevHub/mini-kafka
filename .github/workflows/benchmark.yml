name: 🚀 Mini Kafka Benchmarks (File Only)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  benchmark:
    name: 📊 Run Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - name: 📚 Checkout
      uses: actions/checkout@v4
      
    - name: 🦀 Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: ⚡ Run benchmarks
      run: |
        # Create results directory
        mkdir -p benchmark_results
        
        # Run benchmarks and save results
        echo "🚀 Running Mini Kafka benchmarks..."
        cargo bench 2>&1 | tee benchmark_results/benchmark_output.txt
        
        # Create timestamp and metadata
        echo "# Mini Kafka Benchmark Results" > benchmark_results/SUMMARY.md
        echo "Generated: $(date)" >> benchmark_results/SUMMARY.md
        echo "Commit: ${{ github.sha }}" >> benchmark_results/SUMMARY.md
        echo "Run: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> benchmark_results/SUMMARY.md
        echo "" >> benchmark_results/SUMMARY.md
        echo '```
        tail -50 benchmark_results/benchmark_output.txt >> benchmark_results/SUMMARY.md
        echo '```' >> benchmark_results/SUMMARY.md
        
        # Copy Criterion HTML reports if available
        if [ -d "target/criterion" ]; then
          cp -r target/criterion benchmark_results/html_reports/
          echo "📊 Criterion HTML reports included"
        fi
        
    - name: 📁 Upload benchmark results
      uses: actions/upload-artifact@v4
      with:
        name: mini-kafka-benchmarks-${{ github.run_number }}
        path: benchmark_results/
        retention-days: 90
        
    - name: 📝 Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          try {
            const summary = fs.readFileSync('benchmark_results/SUMMARY.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📊 Mini Kafka Benchmark Results\n\n${summary}\n\n**📁 Download:** [Full benchmark results](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`
            });
          } catch (error) {
            console.log('Could not post comment:', error);
          }
