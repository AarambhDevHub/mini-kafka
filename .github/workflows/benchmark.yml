name: 🚀 Mini Kafka Benchmarks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  benchmark:
    name: 📊 Performance Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - name: 📚 Checkout
      uses: actions/checkout@v4
      
    - name: 🦀 Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: 🔧 Build project
      run: cargo build --release
        
    - name: ⚡ Run benchmarks and save results
      run: |
        # Create results directory
        mkdir -p benchmark_results
        
        # Run benchmarks and capture output
        echo "🚀 Running Mini Kafka benchmarks..."
        cargo bench 2>&1 | tee benchmark_results/benchmark_output.txt
        
        # Create summary report
        echo "# Mini Kafka Benchmark Results" > benchmark_results/SUMMARY.md
        echo "Generated: $(date)" >> benchmark_results/SUMMARY.md
        echo "Commit: ${{ github.sha }}" >> benchmark_results/SUMMARY.md
        echo "Repository: ${{ github.repository }}" >> benchmark_results/SUMMARY.md
        echo "Run ID: ${{ github.run_id }}" >> benchmark_results/SUMMARY.md
        echo "" >> benchmark_results/SUMMARY.md
        echo "## Results" >> benchmark_results/SUMMARY.md
        echo '```
        grep -E "(time:|thrpt:|Found.*outliers)" benchmark_results/benchmark_output.txt >> benchmark_results/SUMMARY.md || true
        echo '```' >> benchmark_results/SUMMARY.md
        
        # Copy HTML reports if they exist
        if [ -d "target/criterion" ]; then
          cp -r target/criterion benchmark_results/html_reports/
          echo "📊 Criterion HTML reports copied to benchmark_results/html_reports/"
        fi
        
        # Show what we created
        echo "📁 Created benchmark files:"
        ls -la benchmark_results/
        
    - name: 📁 Upload benchmark artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mini-kafka-benchmarks-${{ github.run_number }}
        path: benchmark_results/
        retention-days: 90
        
    - name: 📊 Upload Criterion HTML reports separately
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: criterion-html-reports-${{ github.run_number }}
        path: target/criterion/
        retention-days: 30
        
    - name: 📝 Comment benchmark results on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          try {
            const summary = fs.readFileSync('benchmark_results/SUMMARY.md', 'utf8');
            const runUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 📊 Mini Kafka Benchmark Results\n\n${summary}\n\n**📁 [Download Full Results](${runUrl})**\n\n---\n*Benchmarks completed successfully! 🎉*`
            });
            console.log('✅ Posted benchmark results to PR');
          } catch (error) {
            console.log('⚠️ Could not post PR comment:', error.message);
          }
